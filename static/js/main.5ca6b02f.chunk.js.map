{"version":3,"sources":["utils/fetchClient.ts","types/TodoStatus.ts","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/Todo/Todo.tsx","types/ErrorMessages.ts","components/TodoList/TodoList.tsx","components/Error/Error.tsx","api/todos.ts","components/Header/Header.tsx","components/Footer/Footer.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","TodoStatus","client","getUserByEmail","email","a","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","ErrorMessages","TodoItem","memo","todo","onDelete","isAdding","changeTodo","processedTodo","editTitle","setEditTitle","newTitle","setNewTitle","completed","title","applyNewTitle","data-cy","checked","onBlur","onKeyUp","key","onDoubleClick","onClick","includes","TodoList","todos","filterStatus","visibleTodos","useMemo","Active","filter","Completed","map","onClose","timerId","clearTimeout","hidden","todoId","Header","todosLength","setTitle","onToggle","completedTodos","newTodoField","useRef","current","focus","aria-label","cn","active","ref","Footer","onStatusChange","status","activeTodos","onClear","href","selected","All","App","useContext","setTodos","setIsAdding","tempTodo","setTempTodo","setFilterStatus","setProcessedTodo","length","userId","catch","TodosWereNotLoaded","handleDeleteTodo","todosId","listOfTodos","TodoIsNotDeleted","finally","handleChangeTodo","caption","TodoIsNotUpdates","trim","addTodo","newTodo","prevTodos","TodoIsNotAdded","TitleIsEmpty","toggleStatus","forEach","Root","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5ca6b02f.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","// eslint-disable-next-line no-shadow\nexport enum TodoStatus {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      // Need to login\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label\n          className=\"label\"\n          htmlFor=\"user-email\"\n        >\n          Email\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"email\"\n              name=\"user-email\"\n              id=\"user-email\"\n              className={classNames('input', {\n                'is-danger': !needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your email\"\n              disabled={loading || needToRegister}\n              value={email}\n              required\n              onChange={e => setEmail(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-envelope\" />\n            </span>\n          </div>\n        </label>\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n            <div\n              className={classNames('control has-icons-left', {\n                'is-loading': loading,\n              })}\n            >\n              <input\n                type=\"text\"\n                id=\"user-name\"\n                className={classNames('input', {\n                  'is-danger': needToRegister && errorMessage,\n                })}\n                placeholder=\"Enter your name\"\n                required\n                minLength={4}\n                disabled={loading}\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-user\" />\n              </span>\n            </div>\n          </label>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  onDelete: (id: number) => Promise<void>;\n  isAdding?: boolean;\n  changeTodo: (\n    id: number,\n    title: string,\n    changeCompletedStatus?: boolean\n  ) => void,\n  processedTodo: number[],\n};\n\nexport const TodoItem: React.FC<Props> = React.memo(({\n  todo,\n  onDelete,\n  isAdding,\n  changeTodo,\n  processedTodo,\n}) => {\n  const [editTitle, setEditTitle] = useState(false);\n  const [newTitle, setNewTitle] = useState('');\n  const { completed, title, id } = todo;\n  const applyNewTitle = () => {\n    setEditTitle(false);\n\n    if (!newTitle) {\n      onDelete(id);\n\n      return;\n    }\n\n    if (newTitle && newTitle !== title) {\n      changeTodo(id, newTitle);\n    }\n  };\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      className={classNames('todo', {\n        completed,\n      })}\n    >\n      <label\n        className=\"todo__status-label\"\n        htmlFor={`todo_status_${id}`}\n      >\n        <input\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={completed}\n          id={`todo_status_${id}`}\n          onChange={() => {\n            changeTodo(id, title, !completed);\n          }}\n        />\n      </label>\n      {(editTitle)\n        ? (\n          <form\n            onSubmit={applyNewTitle}\n          >\n            <input\n              data-cy=\"TodoTitle\"\n              className=\"todo__title-field\"\n              type=\"text\"\n              value={newTitle}\n              onChange={(event) => setNewTitle(event.target.value)}\n              onBlur={applyNewTitle}\n              onKeyUp={(event) => {\n                if (event.key === 'Escape') {\n                  setEditTitle(false);\n                }\n              }}\n            />\n          </form>\n        )\n        : (\n          <span\n            data-cy=\"TodoTitle\"\n            className=\"todo__title\"\n            onDoubleClick={() => {\n              setEditTitle(true);\n              setNewTitle(title);\n            }}\n          >\n            {title}\n          </span>\n        )}\n\n      {editTitle || (\n        <button\n          type=\"button\"\n          className=\"todo__remove\"\n          data-cy=\"TodoDeleteButton\"\n          onClick={() => onDelete(id)}\n        >\n          ×\n        </button>\n      )}\n\n      <div\n        data-cy=\"TodoLoader\"\n        className={classNames('modal overlay', {\n          'is-active': processedTodo.includes(id) || isAdding,\n        })}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n});\n","// eslint-disable-next-line no-shadow\nexport enum ErrorMessages {\n  TodosWereNotLoaded = 'Cannot load todos list',\n  TitleIsEmpty = \"Title can't be empty\",\n  TodoIsNotAdded = 'Unable to add a todo',\n  TodoIsNotDeleted = 'Cannot delete todo',\n  TodoIsNotUpdates = 'Unable to update a todo',\n}\n","import React, { useMemo } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoStatus } from '../../types/TodoStatus';\nimport { TodoItem } from '../Todo';\n\ntype Props = {\n  todos: Todo[];\n  onDelete: (id: number) => Promise<void>;\n  tempTodo?: Todo;\n  isAdding?: boolean;\n  filterStatus: TodoStatus,\n  changeTodo: (id: number, title: string) => void,\n  processedTodo: number[],\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  onDelete,\n  filterStatus,\n  changeTodo,\n  processedTodo,\n}) => {\n  const visibleTodos = useMemo(() => {\n    switch (filterStatus) {\n      case TodoStatus.Active:\n        return todos.filter(todo => !todo.completed);\n      case TodoStatus.Completed:\n        return todos.filter(todo => todo.completed);\n      default:\n        return todos;\n    }\n  }, [filterStatus, todos]);\n\n  return (\n    <section className=\"todoapp__main\" data-cy=\"TodoList\">\n      {visibleTodos.map(todo => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n          onDelete={onDelete}\n          changeTodo={changeTodo}\n          processedTodo={processedTodo}\n        />\n      ))}\n    </section>\n  );\n});\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect } from 'react';\n\ntype Props = {\n  errorMessage: string;\n  onClose: (message: string) => void;\n};\n\nexport const Error: React.FC<Props> = ({ errorMessage, onClose }) => {\n  useEffect(() => {\n    const timerId = setTimeout(() => onClose(''), 3000);\n\n    return () => clearTimeout(timerId);\n  }, [errorMessage]);\n\n  return (\n    <div\n      data-cy=\"ErrorNotification\"\n      className=\"notification is-danger is-light has-text-weight-normal\"\n      hidden={errorMessage === ''}\n    >\n      <button\n        data-cy=\"HideErrorButton\"\n        type=\"button\"\n        className=\"delete\"\n        onClick={() => onClose('')}\n      />\n\n      {errorMessage}\n    </div>\n\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\n// Add more methods here\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const changeTodo = (\n  todoId: number,\n  title?: string,\n  completed?: boolean,\n) => {\n  return client.patch<Todo>(`/todos/${todoId}`, { title, completed });\n};\n\nexport const addTodo = (\n  title: string,\n  userId: number,\n  completed = false,\n) => {\n  return client.post<Todo>('/todos', { title, userId, completed });\n};\n","import cn from 'classnames';\nimport React, { useEffect, useRef } from 'react';\n\ntype Props = {\n  isAdding: boolean;\n  todosLength: number;\n  onSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  title: string;\n  setTitle: (newTitle: string) => void;\n  onToggle: () => void;\n  completedTodos: number;\n};\n\nexport const Header: React.FC<Props> = React.memo(({\n  isAdding,\n  todosLength,\n  onSubmit,\n  title,\n  setTitle,\n  onToggle,\n  completedTodos,\n}) => {\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, []);\n\n  return (\n    <header className=\"todoapp__header\">\n      {!!todosLength && (\n        <button\n          data-cy=\"ToggleAllButton\"\n          type=\"button\"\n          aria-label=\"ToggleAllButton\"\n          className={cn('todoapp__toggle-all', {\n            active: todosLength === completedTodos,\n          })}\n          onClick={onToggle}\n        />\n      )}\n\n      <form onSubmit={onSubmit}>\n        <input\n          data-cy=\"NewTodoField\"\n          type=\"text\"\n          ref={newTodoField}\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          disabled={isAdding}\n        />\n      </form>\n    </header>\n  );\n});\n","import cn from 'classnames';\nimport React from 'react';\nimport { TodoStatus } from '../../types/TodoStatus';\n\ntype Props = {\n  onStatusChange: (status: TodoStatus) => void;\n  activeTodos: number;\n  status: TodoStatus;\n  completedTodos: number;\n  onClear: () => void;\n};\n\nexport const Footer: React.FC<Props> = React.memo(({\n  onStatusChange,\n  status,\n  activeTodos,\n  completedTodos,\n  onClear,\n}) => (\n  <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n    <span className=\"todo-count\" data-cy=\"todosCounter\">\n      {`${activeTodos} items left`}\n    </span>\n\n    <nav className=\"filter\" data-cy=\"Filter\">\n      <a\n        data-cy=\"FilterLinkAll\"\n        href=\"#/\"\n        className={cn('filter__link', {\n          selected: status === TodoStatus.All,\n        })}\n        onClick={() => onStatusChange(TodoStatus.All)}\n      >\n        All\n      </a>\n\n      <a\n        data-cy=\"FilterLinkActive\"\n        href=\"#/active\"\n        className={cn('filter__link', {\n          selected: status === TodoStatus.Active,\n        })}\n        onClick={() => onStatusChange(TodoStatus.Active)}\n      >\n        Active\n      </a>\n      <a\n        data-cy=\"FilterLinkCompleted\"\n        href=\"#/completed\"\n        className={cn('filter__link', {\n          selected: status === TodoStatus.Completed,\n        })}\n        onClick={() => onStatusChange(TodoStatus.Completed)}\n      >\n        Completed\n      </a>\n    </nav>\n\n    <button\n      data-cy=\"ClearCompletedButton\"\n      type=\"button\"\n      className=\"todoapp__clear-completed\"\n      disabled={!completedTodos}\n      onClick={() => {\n        onClear();\n      }}\n    >\n      Clear completed\n    </button>\n  </footer>\n));\n","import React, {\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { TodoList } from './components/TodoList';\nimport { Error } from './components/Error';\nimport { Todo } from './types/Todo';\nimport {\n  addTodo, changeTodo, deleteTodo, getTodos,\n} from './api/todos';\nimport { Header } from './components/Header';\nimport { TodoStatus } from './types/TodoStatus';\nimport { Footer } from './components/Footer';\nimport { TodoItem } from './components/Todo';\nimport { ErrorMessages } from './types/ErrorMessages';\n\nexport const App: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const user = useContext(AuthContext);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isAdding, setIsAdding] = useState(false);\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n  const [title, setTitle] = useState('');\n  const [filterStatus, setFilterStatus] = useState(TodoStatus.All);\n  const [processedTodo, setProcessedTodo] = useState<number[]>([0]);\n\n  const activeTodos = useMemo(() => {\n    return todos.filter(todo => !todo.completed).length;\n  }, [todos]);\n\n  const completedTodos = useMemo(() => todos.length - activeTodos,\n    [activeTodos]);\n\n  const todosLength = useMemo(() => todos.length, [todos]);\n\n  useEffect(() => {\n    if (user) {\n      getTodos(user.id)\n        .then(setTodos)\n        .catch(() => setErrorMessage(ErrorMessages.TodosWereNotLoaded));\n    }\n  }, [user]);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!title.trim()) {\n      setErrorMessage(ErrorMessages.TitleIsEmpty);\n\n      return;\n    }\n\n    if (user) {\n      setIsAdding(true);\n      setTempTodo({\n        id: 0,\n        userId: user.id,\n        title,\n        completed: false,\n      });\n\n      addTodo(title, user?.id)\n        .then((newTodo) => {\n          setTodos((prevTodos) => ([\n            ...prevTodos,\n            newTodo,\n          ]));\n\n          setTitle('');\n        })\n        .catch(() => setErrorMessage(ErrorMessages.TodoIsNotAdded))\n        .finally(() => {\n          setIsAdding(false);\n          setTempTodo(null);\n          setTitle('');\n        });\n    }\n  };\n\n  const handleDeleteTodo = (id: number) => {\n    setProcessedTodo(todosId => [...todosId, id]);\n\n    return deleteTodo(id)\n      .then(() => {\n        setTodos((listOfTodos) => (\n          listOfTodos.filter(todo => todo.id !== id)));\n      })\n      .catch(() => setErrorMessage(ErrorMessages.TodoIsNotDeleted))\n      .finally(() => setProcessedTodo(todosId => (\n        todosId.filter(todoId => todoId !== id))));\n  };\n\n  const handleChangeTodo = (\n    id: number,\n    caption: string,\n    status = false,\n  ) => {\n    setProcessedTodo(todosId => [...todosId, id]);\n    changeTodo(id, caption, status).then(() => {\n      setTodos((listOfTodos) => (\n        listOfTodos.map(todo => {\n          return todo.id === id\n            ? {\n              ...todo,\n              title: caption,\n              completed: status,\n            }\n            : todo;\n        })));\n    })\n      .catch(() => setErrorMessage(ErrorMessages.TodoIsNotUpdates))\n      .finally(() => setProcessedTodo(todosId => (\n        todosId.filter(todoId => todoId !== id))));\n  };\n\n  const handleClearComplited = () => {\n    todos.forEach(todo => {\n      if (todo.completed) {\n        handleDeleteTodo(todo.id);\n      }\n    });\n  };\n\n  const toggleAll = () => {\n    const toggleStatus = todosLength === completedTodos;\n\n    todos.forEach(todo => {\n      const { id, title: caption, completed } = todo;\n\n      if (completed === toggleStatus) {\n        handleChangeTodo(id, caption, !completed);\n      }\n    });\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header\n          isAdding={isAdding}\n          todosLength={todosLength}\n          onSubmit={handleSubmit}\n          title={title}\n          setTitle={setTitle}\n          onToggle={toggleAll}\n          completedTodos={completedTodos}\n        />\n\n        <TodoList\n          todos={todos}\n          onDelete={handleDeleteTodo}\n          filterStatus={filterStatus}\n          changeTodo={handleChangeTodo}\n          processedTodo={processedTodo}\n        />\n\n        {tempTodo && (\n          <TodoItem\n            todo={tempTodo}\n            onDelete={handleDeleteTodo}\n            isAdding={isAdding}\n            changeTodo={handleChangeTodo}\n            processedTodo={processedTodo}\n          />\n        )}\n\n        {!!todosLength && (\n          <Footer\n            onStatusChange={setFilterStatus}\n            status={filterStatus}\n            activeTodos={activeTodos}\n            completedTodos={completedTodos}\n            onClear={handleClearComplited}\n          />\n        )}\n      </div>\n\n      <Error errorMessage={errorMessage} onClose={setErrorMessage} />\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport React, { StrictMode } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nconst Root = () => (\n  <StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </StrictMode>\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}